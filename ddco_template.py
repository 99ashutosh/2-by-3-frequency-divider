# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ddco_template.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1508, 811)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.exit_btn = QtWidgets.QPushButton(self.centralwidget)
        self.exit_btn.setGeometry(QtCore.QRect(10, 770, 199, 27))
        self.exit_btn.setObjectName("exit_btn")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget_2.setGeometry(QtCore.QRect(0, 0, 1501, 751))
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.label_2 = QtWidgets.QLabel(self.tab_4)
        self.label_2.setGeometry(QtCore.QRect(10, 10, 331, 41))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.tab_4)
        self.label_3.setGeometry(QtCore.QRect(10, 60, 121, 19))
        font = QtGui.QFont()
        font.setFamily("Fira Sans")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label = QtWidgets.QLabel(self.tab_4)
        self.label.setGeometry(QtCore.QRect(10, 80, 1001, 601))
        self.label.setObjectName("label")
        self.tabWidget = QtWidgets.QTabWidget(self.tab_4)
        self.tabWidget.setGeometry(QtCore.QRect(1020, 0, 471, 711))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.label_5 = QtWidgets.QLabel(self.tab)
        self.label_5.setGeometry(QtCore.QRect(10, 10, 371, 391))
        self.label_5.setObjectName("label_5")
        self.tabWidget.addTab(self.tab, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.tab_3)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 244, 201, 62))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.vvp_out_2 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.vvp_out_2.setObjectName("vvp_out_2")
        self.verticalLayout.addWidget(self.vvp_out_2)
        self.vvp_out_3 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.vvp_out_3.setObjectName("vvp_out_3")
        self.verticalLayout.addWidget(self.vvp_out_3)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.tab_3)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(10, 320, 201, 62))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gtkwave_2 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.gtkwave_2.setObjectName("gtkwave_2")
        self.verticalLayout_2.addWidget(self.gtkwave_2)
        self.gtkwave_3 = QtWidgets.QPushButton(self.verticalLayoutWidget_2)
        self.gtkwave_3.setObjectName("gtkwave_3")
        self.verticalLayout_2.addWidget(self.gtkwave_3)
        self.label_8 = QtWidgets.QLabel(self.tab_3)
        self.label_8.setGeometry(QtCore.QRect(10, 10, 451, 211))
        self.label_8.setObjectName("label_8")
        self.tabWidget.addTab(self.tab_3, "")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.label_7 = QtWidgets.QLabel(self.tab_5)
        self.label_7.setGeometry(QtCore.QRect(10, 10, 451, 581))
        self.label_7.setObjectName("label_7")
        self.tabWidget.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.groupBox = QtWidgets.QGroupBox(self.tab_6)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 441, 131))
        self.groupBox.setObjectName("groupBox")
        self.label_6 = QtWidgets.QLabel(self.groupBox)
        self.label_6.setGeometry(QtCore.QRect(10, 40, 421, 81))
        self.label_6.setObjectName("label_6")
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.tab_6)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(10, 250, 201, 62))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.vvp_n = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.vvp_n.setObjectName("vvp_n")
        self.verticalLayout_3.addWidget(self.vvp_n)
        self.gtk_n = QtWidgets.QPushButton(self.verticalLayoutWidget_3)
        self.gtk_n.setObjectName("gtk_n")
        self.verticalLayout_3.addWidget(self.gtk_n)
        self.lineEdit = QtWidgets.QLineEdit(self.tab_6)
        self.lineEdit.setGeometry(QtCore.QRect(10, 200, 161, 27))
        self.lineEdit.setObjectName("lineEdit")
        self.err_label = QtWidgets.QLabel(self.tab_6)
        self.err_label.setGeometry(QtCore.QRect(10, 320, 381, 51))
        self.err_label.setText("")
        self.err_label.setObjectName("err_label")
        self.tabWidget.addTab(self.tab_6, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.label_4 = QtWidgets.QLabel(self.tab_2)
        self.label_4.setGeometry(QtCore.QRect(10, 10, 361, 321))
        self.label_4.setObjectName("label_4")
        self.tabWidget.addTab(self.tab_2, "")
        self.tabWidget_2.addTab(self.tab_4, "")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Simulator"))
        self.exit_btn.setText(_translate("MainWindow", "Exit"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:24pt; font-weight:600;\">2/3 Frequency Divider</span></p></body></html>"))
        self.label_3.setText(_translate("MainWindow", "Circuit Diagram:"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><img src=\":/main/circuit_diagram_final1.png\"/></p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><ul><li><p>Has 2 inputs, the clock signal `clk` <br>and the modulus control signal `mc`.</p><p></p></li><li><p>The program divides the input frequency <br>signal by reading the modulus control <br>or `mc` value. (This is specified in the testbench)</p><p></p></li><li><p>The program runs of trackers for the <br>main clock line `clk` based on positive and <br>negative edges which triggers the <br>output clock lines `clk_out` accordingly.</p><p></p></li><li><p align=\"justify\">The above is simulated using flip-flops, <br>multiplexers, subtractors, decoders, registers <br>and ripple carry adders. </p></li></ul><br/>\n"
"<table border=\"6\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px;solid black\" cellspacing=\"2\" cellpadding=\"0\"><th>Value of <code>mc</code> and its operation</th><tr><td><p>Value of <code>mc</code> </p></td><td><p>Operation</p></td></tr><tr><td><p>0010</p></td><td><p>Divide by 2</p></td></tr><tr><td><p>0011</p></td><td><p>Divide by 3</p></td></tr></table>\n"
"</body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Working"))
        self.vvp_out_2.setText(_translate("MainWindow", "View VVP Output for mc = 2"))
        self.vvp_out_3.setText(_translate("MainWindow", "View VVP Output for mc = 3"))
        self.gtkwave_2.setText(_translate("MainWindow", "GTKWave output for mc = 2"))
        self.gtkwave_3.setText(_translate("MainWindow", "GTKWave output for mc = 3"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p align=\"justify\">Compiled using commands:</p><p align=\"justify\">for MC = 2<br/>\n"
"<span style=\" font-family:\'monospace\';\">iverilog -o frequency_divider frequency_divider.v<br> frequency_divider_tb_2.v</span><br/><span style=\" font-family:\'monospace\';\">vvp frequency_divider<br></span></p><p>for MC = 3<br/><span style=\" font-family:\'monospace\';\">iverilog -o frequency_divider frequency_divider.v<br> frequency_divider_tb_3.v</span><br/><span style=\" font-family:\'monospace\';\">vvp frequency_divider<br></span></p><p align=\"justify\"><br/></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Demonstration"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><pre>\n"
"module frequency_divider(clk,reset,mc,\n"
"pos_count,neg_count,clk_out);\n"
"\n"
"input [3:0] mc;  \n"
"input clk;\n"
"input reset;\n"
"output clk_out;\n"
"     \n"
"output reg [3:0] pos_count, neg_count;\n"
"reg c;\n"
"wire [1:0] r_nxt;\n"
"\n"
"always @(posedge clk)\n"
"if (reset)\n"
"    pos_count =0;\n"
"else \n"
"    pos_count= pos_count +1;\n"
"     \n"
"always @(negedge clk)\n"
"if (reset)\n"
"begin\n"
"    neg_count =0; pos_count=0;\n"
"end\n"
"else  if (neg_count ==(mc) && pos_count ==(mc+1)) \n"
"begin\n"
"    neg_count = 0;pos_count=0;\n"
"end\n"
"else \n"
"    neg_count= neg_count +1;\n"
"\n"
"assign clk_out = (pos_count +neg_count> (mc));\n"
"endmodule\n"
"</pre></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("MainWindow", "Code"))
        self.groupBox.setTitle(_translate("MainWindow", "Divide-by-n circuit"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p>This circuit can also divide the given input frequency <br>signal by 1,4,5,6,7.</p><p>Enter value of n and test</p></body></html>"))
        self.vvp_n.setText(_translate("MainWindow", "View VVP Output for mc = n"))
        self.gtk_n.setText(_translate("MainWindow", "GTKWave for mc = n"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Enter value of n"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("MainWindow", "Experimental"))
        self.label_4.setText(_translate("MainWindow", "<html><head/><body><h1 style=\" margin-top:18px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:xx-large; font-weight:600;\">About this Project</span></h1><p>This is a project to demonstrate the working of a \n"
"<br>2/3-frequency-divider<br/><br/>Tools Used: <span style=\" font-family:\'monospace\';\">iverilog, python and qt</span></p><p><br/><br/>Team members </p><table border=\"2\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px;solid black\" cellspacing=\"2\" cellpadding=\"0\"><tr><td><p>Name </p></td><td><p>SRN</p></td></tr><tr><td><p>Arunvenkat</p></td><td><p>PES2UG20CS068</p></td></tr><tr><td><p>Ashutosh</p></td><td><p>PES2UG20CS071</p></td></tr><tr><td><p>Ashutosh Routray</p></td><td><p>PES2UG20CS072</p></td></tr><tr><td><p>Claudius D\'Souza</p></td><td><p>PES2UG20CS097</p></td></tr></table></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "About"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "2/3 Frequency Divider"))
import circuit
